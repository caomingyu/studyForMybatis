<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.generator.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.study.generator.model.SysUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_emial" jdbcType="VARCHAR" property="userEmial"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="user_info" jdbcType="LONGVARCHAR" property="userInfo"/>
        <result column="head_img" jdbcType="LONGVARBINARY" property="headImg"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.study.generator.model.SysUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_user (id, user_name, user_password,
        user_emial, create_time, user_info,
        head_img)
        values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
        #{userEmial,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{userInfo,jdbcType=LONGVARCHAR},
        #{headImg,jdbcType=LONGVARBINARY})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.study.generator.model.SysUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update sys_user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_emial = #{userEmial,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        user_info = #{userInfo,jdbcType=LONGVARCHAR},
        head_img = #{headImg,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_password, user_emial, create_time, user_info, head_img
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select id, user_name, user_password, user_emial, create_time, user_info, head_img
        from sys_user
    </select>
    <resultMap id="userWithRole" type="com.study.generator.model.SysUser" extends="BaseResultMap">
        <collection property="roleList" columnPrefix="role_" resultMap="com.study.generator.mapper.SysRoleMapper.roleWithPrivilege"/>
    </resultMap>
    <select id="selectAllWithRole" resultMap="userWithRole">
        select su.id,
               su.user_name,
               su.user_password,
               su.user_emial,
               su.user_info,
               su.head_img,
               su.create_time,
               sr.id             role_id,
               sr.role_name      role_role_name,
               sr.enabled        role_enabled,
               sr.create_by      role_create_by,
               sr.create_time    role_create_time,
               sp.id             role_privilege_id,
               sp.privilege_name role_privilege_privilege_name,
               sp.privilege_url  role_privilege_privilege_url
        from sys_user su
                 left join sys_user_role sur on su.id = sur.user_id
                 left join sys_role sr on sur.role_id = sr.id
                 left join sys_role_privilege srp on sr.id = srp.role_id
                 left join sys_privilege sp on srp.privilege_id = sp.id
    </select>
</mapper>